knitr::opts_chunk$set(echo = TRUE, comment = NA, message = FALSE, eval = TRUE,
fig.width = 4.5, fig.height = 3, fig.align = "right")
library(bit64)
library(data.table)
library(fixest)
library(knitr)
library(ggplot2)
data_folder = "data"
load(paste0(data_folder, "/Brands.RData"))
load(paste0(data_folder, "/Stores.RData"))
selected_module = 7012                 # Laundry detergent
laundry = brands[product_module_code == selected_module]
laundry_sorted = laundry[order(-revenue)][1:4]
laundry_sorted
selected_brands = data.frame(
product_id = c(653791, 557775, 507562, 623280),
brand_name = c('Tide', 'Gain', 'ArmHammer', 'Purex')
)
print(selected_brands)
load("data/brand_move_7012.RData")
library(data.table)
setnames(move, old = "promo_dummy", new = "promotion", skip_absent=TRUE)
setnames(move, old = "units", new = "quantity", skip_absent=TRUE)
setnames(move, old = "brand_code_uc", new = "product_id", skip_absent=TRUE)
move$promotion <- as.numeric(move$promotion)
head(move)
final_data = merge(move, selected_brands, by = "product_id", all = FALSE)
print(final_data)
isOutlier <- function(x, threshold_bottom, threshold_top) {
is_outlier = rep(FALSE, times = length(x))
median_x   = median(x, na.rm = TRUE)
is_outlier[x/median_x < threshold_bottom | x/median_x > threshold_top] = TRUE
return(is_outlier)
}
threshold_bottom <- 0.35
threshold_top <- 2.5
final_data[, outlier_flag := isOutlier(price, threshold_bottom, threshold_top),
by = .(store_code_uc, brand_name)]
sum(final_data$outlier_flag)
final_data = final_data[outlier_flag == FALSE]
# removing flag
final_data[, outlier_flag := NULL]
final_data
final_data = final_data[, .(store_code_uc, week_end, brand_name, quantity, price, promotion)]
final_data <- dcast(
final_data,
store_code_uc + week_end ~ brand_name,
value.var = c("quantity", "price", "promotion")
)
load("data/Stores.RData")
ls()
print(stores)
valid_store_meta <- stores[!is.na(stores$retailer_code)]
final_data_with_store <- merge(final_data, valid_store_meta, by = "store_code_uc", all = FALSE)
head(final_data_with_store)
library(lubridate)
final_data_with_store$week_end <- as.Date(final_data_with_store$week_end)
final_data_with_store[, year := year(week_end)]
final_data_with_store[, month := month(week_end)]
final_data_with_store[, month_trend := 12*(year - min(year)) + month]
head(final_data_with_store[, .(week_end, year, month, month_trend)])
final_data_with_store = final_data_with_store[complete.cases(final_data_with_store)]
market_coverage = final_data_with_store[, .(n_obs = .N), by = SMM_description]
kable(market_coverage, col.names = c("Scantrack market", "No. obs."))
tide_average = final_data_with_store[, mean(price_Tide, na.rm = TRUE)]
norm_tide = final_data_with_store[, price_Tide / tide_average]
df_tide = data.frame(norm_tide)
x_limits = quantile(df_tide$norm_tide, probs = c(0.00, 0.997), na.rm = TRUE)
ggplot(df_tide, aes(x = norm_tide)) +
geom_histogram(binwidth = 0.1, fill = "lightblue", color = "black") +
scale_x_continuous(breaks = seq(min(df_tide$norm_tide), max(df_tide$norm_tide), by = 0.2),
labels = scales::number_format(accuracy = 0.1),
limits = x_limits) +
labs(title = "Histogram of Normalized Prices of Tide",
x = "Normalized Price",
y = "Frequency") +
theme_minimal()
# Calculate gain_average and normalize prices for Gain
gain_average = final_data_with_store[, mean(price_Gain, na.rm = TRUE)]
norm_gain = final_data_with_store[, price_Gain / gain_average]
# Create a data frame for Gain's normalized prices
df_gain = data.frame(norm_gain)
# Plot histogram for normalized Gain prices
ggplot(df_gain, aes(x = norm_gain)) +
geom_histogram(binwidth = 0.1, fill = "lightblue", color = "black") +
scale_x_continuous(breaks = seq(min(df_gain$norm_gain, na.rm = TRUE), max(df_gain$norm_gain, na.rm = TRUE), by = 0.2),
labels = scales::number_format(accuracy = 0.1)) +
labs(title = "Histogram of Normalized Prices of Gain",
x = "Normalized Price",
y = "Frequency") +
theme_minimal()
df_tide = final_data_with_store[, .(
norm_tide = price_Tide / ((price_ArmHammer + price_Purex + price_Gain) / 3)
), by = week_end]
x_limits = quantile(df_tide$norm_tide, probs = c(0.00, 0.997), na.rm = TRUE)
ggplot(df_tide, aes(x = norm_tide)) +
geom_histogram(binwidth = 0.1, fill = "lightblue", color = "black") +
scale_x_continuous(limits = x_limits) +
labs(title = "Histogram of Relative Prices of Tide",
x = "Relative Price of Tide (Tide / Avg Competitors)",
y = "Frequency") +
theme_minimal()
df_gain = final_data_with_store[, .(
norm_ggin = price_Gain / ((price_ArmHammer + price_Purex + price_Tide) / 3)
), by = week_end]
ggplot(df_gain, aes(x = norm_gain)) +
geom_histogram(binwidth = 0.1, fill = "lightblue", color = "black") +
labs(title = "Histogram of Relative Prices of Gain",
x = "Relative Price of Gain (Gain / Avg Competitors)",
y = "Frequency") +
theme_minimal()
